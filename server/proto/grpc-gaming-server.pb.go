// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc-gaming-server.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameEvent_Type int32

const (
	GameEvent_DATA_NONE   GameEvent_Type = 0
	GameEvent_DATA_INT    GameEvent_Type = 1
	GameEvent_DATA_STRING GameEvent_Type = 2
	GameEvent_DATA_MAP    GameEvent_Type = 3
	GameEvent_DATA_BYTES  GameEvent_Type = 4
	GameEvent_DATA_MIXED  GameEvent_Type = 5
)

var GameEvent_Type_name = map[int32]string{
	0: "DATA_NONE",
	1: "DATA_INT",
	2: "DATA_STRING",
	3: "DATA_MAP",
	4: "DATA_BYTES",
	5: "DATA_MIXED",
}

var GameEvent_Type_value = map[string]int32{
	"DATA_NONE":   0,
	"DATA_INT":    1,
	"DATA_STRING": 2,
	"DATA_MAP":    3,
	"DATA_BYTES":  4,
	"DATA_MIXED":  5,
}

func (x GameEvent_Type) String() string {
	return proto.EnumName(GameEvent_Type_name, int32(x))
}

func (GameEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ac4477979a4fd38c, []int{4, 0}
}

type MatchRequest struct {
	PlayerId             string   `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Game                 string   `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	PlayerLimit          int32    `protobuf:"varint,3,opt,name=player_limit,json=playerLimit,proto3" json:"player_limit,omitempty"`
	Code                 string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchRequest) Reset()         { *m = MatchRequest{} }
func (m *MatchRequest) String() string { return proto.CompactTextString(m) }
func (*MatchRequest) ProtoMessage()    {}
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac4477979a4fd38c, []int{0}
}

func (m *MatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchRequest.Unmarshal(m, b)
}
func (m *MatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchRequest.Marshal(b, m, deterministic)
}
func (m *MatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchRequest.Merge(m, src)
}
func (m *MatchRequest) XXX_Size() int {
	return xxx_messageInfo_MatchRequest.Size(m)
}
func (m *MatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchRequest proto.InternalMessageInfo

func (m *MatchRequest) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *MatchRequest) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *MatchRequest) GetPlayerLimit() int32 {
	if m != nil {
		return m.PlayerLimit
	}
	return 0
}

func (m *MatchRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *MatchRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type MatchEvent struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	PlayerIndex          int32    `protobuf:"varint,2,opt,name=player_index,json=playerIndex,proto3" json:"player_index,omitempty"`
	PlayerCount          int32    `protobuf:"varint,3,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
	GameId               string   `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Location             string   `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchEvent) Reset()         { *m = MatchEvent{} }
func (m *MatchEvent) String() string { return proto.CompactTextString(m) }
func (*MatchEvent) ProtoMessage()    {}
func (*MatchEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac4477979a4fd38c, []int{1}
}

func (m *MatchEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchEvent.Unmarshal(m, b)
}
func (m *MatchEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchEvent.Marshal(b, m, deterministic)
}
func (m *MatchEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchEvent.Merge(m, src)
}
func (m *MatchEvent) XXX_Size() int {
	return xxx_messageInfo_MatchEvent.Size(m)
}
func (m *MatchEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MatchEvent proto.InternalMessageInfo

func (m *MatchEvent) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *MatchEvent) GetPlayerIndex() int32 {
	if m != nil {
		return m.PlayerIndex
	}
	return 0
}

func (m *MatchEvent) GetPlayerCount() int32 {
	if m != nil {
		return m.PlayerCount
	}
	return 0
}

func (m *MatchEvent) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *MatchEvent) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type CreateGameRequest struct {
	PlayerId             []string `protobuf:"bytes,1,rep,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGameRequest) Reset()         { *m = CreateGameRequest{} }
func (m *CreateGameRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGameRequest) ProtoMessage()    {}
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac4477979a4fd38c, []int{2}
}

func (m *CreateGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGameRequest.Unmarshal(m, b)
}
func (m *CreateGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGameRequest.Marshal(b, m, deterministic)
}
func (m *CreateGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGameRequest.Merge(m, src)
}
func (m *CreateGameRequest) XXX_Size() int {
	return xxx_messageInfo_CreateGameRequest.Size(m)
}
func (m *CreateGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGameRequest proto.InternalMessageInfo

func (m *CreateGameRequest) GetPlayerId() []string {
	if m != nil {
		return m.PlayerId
	}
	return nil
}

type CreateGameResponse struct {
	GameId               string   `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGameResponse) Reset()         { *m = CreateGameResponse{} }
func (m *CreateGameResponse) String() string { return proto.CompactTextString(m) }
func (*CreateGameResponse) ProtoMessage()    {}
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac4477979a4fd38c, []int{3}
}

func (m *CreateGameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGameResponse.Unmarshal(m, b)
}
func (m *CreateGameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGameResponse.Marshal(b, m, deterministic)
}
func (m *CreateGameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGameResponse.Merge(m, src)
}
func (m *CreateGameResponse) XXX_Size() int {
	return xxx_messageInfo_CreateGameResponse.Size(m)
}
func (m *CreateGameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGameResponse proto.InternalMessageInfo

func (m *CreateGameResponse) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

type GameEvent struct {
	GameId               string            `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerId             string            `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Type                 GameEvent_Type    `protobuf:"varint,3,opt,name=type,proto3,enum=GameEvent_Type" json:"type,omitempty"`
	Key                  string            `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	ValueInt             int32             `protobuf:"varint,5,opt,name=value_int,json=valueInt,proto3" json:"value_int,omitempty"`
	ValueString          string            `protobuf:"bytes,6,opt,name=value_string,json=valueString,proto3" json:"value_string,omitempty"`
	ValueMap             map[string]string `protobuf:"bytes,7,rep,name=value_map,json=valueMap,proto3" json:"value_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ValueBytes           []byte            `protobuf:"bytes,8,opt,name=value_bytes,json=valueBytes,proto3" json:"value_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GameEvent) Reset()         { *m = GameEvent{} }
func (m *GameEvent) String() string { return proto.CompactTextString(m) }
func (*GameEvent) ProtoMessage()    {}
func (*GameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac4477979a4fd38c, []int{4}
}

func (m *GameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEvent.Unmarshal(m, b)
}
func (m *GameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEvent.Marshal(b, m, deterministic)
}
func (m *GameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEvent.Merge(m, src)
}
func (m *GameEvent) XXX_Size() int {
	return xxx_messageInfo_GameEvent.Size(m)
}
func (m *GameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_GameEvent proto.InternalMessageInfo

func (m *GameEvent) GetGameId() string {
	if m != nil {
		return m.GameId
	}
	return ""
}

func (m *GameEvent) GetPlayerId() string {
	if m != nil {
		return m.PlayerId
	}
	return ""
}

func (m *GameEvent) GetType() GameEvent_Type {
	if m != nil {
		return m.Type
	}
	return GameEvent_DATA_NONE
}

func (m *GameEvent) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GameEvent) GetValueInt() int32 {
	if m != nil {
		return m.ValueInt
	}
	return 0
}

func (m *GameEvent) GetValueString() string {
	if m != nil {
		return m.ValueString
	}
	return ""
}

func (m *GameEvent) GetValueMap() map[string]string {
	if m != nil {
		return m.ValueMap
	}
	return nil
}

func (m *GameEvent) GetValueBytes() []byte {
	if m != nil {
		return m.ValueBytes
	}
	return nil
}

func init() {
	proto.RegisterEnum("GameEvent_Type", GameEvent_Type_name, GameEvent_Type_value)
	proto.RegisterType((*MatchRequest)(nil), "MatchRequest")
	proto.RegisterType((*MatchEvent)(nil), "MatchEvent")
	proto.RegisterType((*CreateGameRequest)(nil), "CreateGameRequest")
	proto.RegisterType((*CreateGameResponse)(nil), "CreateGameResponse")
	proto.RegisterType((*GameEvent)(nil), "GameEvent")
	proto.RegisterMapType((map[string]string)(nil), "GameEvent.ValueMapEntry")
}

func init() {
	proto.RegisterFile("grpc-gaming-server.proto", fileDescriptor_ac4477979a4fd38c)
}

var fileDescriptor_ac4477979a4fd38c = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x53, 0x5d, 0x8f, 0xd2, 0x40,
	0x14, 0x65, 0xa0, 0xe5, 0xe3, 0x16, 0x76, 0xeb, 0x68, 0xe2, 0x04, 0x1f, 0xd4, 0x6a, 0xe2, 0xbe,
	0xd0, 0x10, 0x36, 0x46, 0xe3, 0x3e, 0xc1, 0x2e, 0xd9, 0x34, 0x11, 0xdc, 0x14, 0x62, 0xd4, 0x17,
	0x52, 0xca, 0x84, 0x6d, 0x84, 0xb6, 0xb6, 0x03, 0x91, 0x7f, 0xe1, 0xbb, 0xbf, 0xc2, 0x7f, 0xe8,
	0xcc, 0x2d, 0xd0, 0xee, 0x6e, 0xf6, 0xa9, 0x73, 0xce, 0x9d, 0x73, 0x3f, 0x4e, 0xef, 0x00, 0x5b,
	0x26, 0xb1, 0xdf, 0x59, 0x7a, 0xeb, 0x20, 0x5c, 0x76, 0x52, 0x9e, 0x6c, 0x79, 0x62, 0xc7, 0x49,
	0x24, 0x22, 0xeb, 0x0f, 0x81, 0xe6, 0xc8, 0x13, 0xfe, 0xad, 0xcb, 0x7f, 0x6d, 0x78, 0x2a, 0xe8,
	0x0b, 0x68, 0xc4, 0x2b, 0x6f, 0xc7, 0x93, 0x59, 0xb0, 0x60, 0xe4, 0x15, 0x39, 0x6b, 0xb8, 0xf5,
	0x8c, 0x70, 0x16, 0x94, 0x82, 0x26, 0x93, 0x70, 0x56, 0x46, 0x1e, 0xcf, 0xf4, 0x35, 0x34, 0xf7,
	0x82, 0x55, 0xb0, 0x0e, 0x04, 0xab, 0xc8, 0x98, 0xee, 0x1a, 0x19, 0xf7, 0x59, 0x51, 0x4a, 0xe6,
	0x47, 0x0b, 0xce, 0xb4, 0x4c, 0xa6, 0xce, 0x94, 0x41, 0x4d, 0x76, 0x91, 0x06, 0x51, 0xc8, 0x74,
	0xa4, 0x0f, 0xd0, 0xfa, 0x4b, 0x00, 0xb0, 0xa5, 0xe1, 0x96, 0x87, 0xb9, 0x98, 0x14, 0xc4, 0x79,
	0xcd, 0x20, 0x5c, 0xf0, 0xdf, 0xd8, 0xcf, 0xb1, 0xa6, 0xa3, 0xa8, 0xc2, 0x15, 0x3f, 0xda, 0x84,
	0xf7, 0xda, 0xba, 0x54, 0x14, 0x7d, 0x0e, 0x35, 0x35, 0x81, 0x1a, 0x34, 0xeb, 0xac, 0xaa, 0xa0,
	0x1c, 0xb3, 0x0d, 0xf5, 0x55, 0xe4, 0x7b, 0x22, 0x6f, 0xee, 0x88, 0xad, 0x2e, 0x3c, 0xb9, 0x4c,
	0xb8, 0x27, 0xf8, 0xb5, 0xbc, 0xfb, 0x88, 0x69, 0x95, 0xa2, 0x69, 0x56, 0x07, 0x68, 0x51, 0x91,
	0xc6, 0x51, 0x98, 0xf2, 0x62, 0x71, 0x52, 0x2c, 0x6e, 0xfd, 0xab, 0x40, 0x43, 0xdd, 0xcc, 0xa6,
	0x7f, 0xec, 0xda, 0xdd, 0x92, 0xe5, 0x7b, 0xff, 0xe9, 0x0d, 0x68, 0x62, 0x17, 0x73, 0x1c, 0xfa,
	0xa4, 0x77, 0x6a, 0x1f, 0xf3, 0xd9, 0x53, 0x49, 0xbb, 0x18, 0xa4, 0x26, 0x54, 0x7e, 0xf2, 0xdd,
	0x7e, 0x74, 0x75, 0x54, 0x39, 0xb7, 0xde, 0x6a, 0x23, 0xab, 0x49, 0xc3, 0x74, 0x34, 0xac, 0x8e,
	0x84, 0x23, 0x3b, 0x91, 0x86, 0x66, 0xc1, 0x54, 0x24, 0x72, 0x8d, 0x58, 0x15, 0x75, 0x06, 0x72,
	0x13, 0xa4, 0xe8, 0xfb, 0x83, 0x7e, 0xed, 0xc5, 0xac, 0x26, 0x6d, 0x30, 0x7a, 0xac, 0x50, 0xfb,
	0xab, 0x8a, 0x8d, 0xbc, 0x78, 0x18, 0x8a, 0x64, 0xb7, 0xcf, 0x2c, 0x21, 0x7d, 0x09, 0x59, 0x96,
	0xd9, 0x7c, 0x27, 0x78, 0xca, 0xea, 0x32, 0x71, 0xd3, 0x05, 0xa4, 0x06, 0x8a, 0x69, 0x5f, 0x40,
	0xeb, 0x8e, 0xf6, 0xd0, 0x3a, 0xc9, 0x5b, 0x7f, 0x06, 0x3a, 0x0a, 0xf6, 0x56, 0x64, 0xe0, 0x53,
	0xf9, 0x23, 0xb1, 0xe6, 0xa0, 0xa9, 0xa1, 0x69, 0x0b, 0x1a, 0x57, 0xfd, 0x69, 0x7f, 0x36, 0xfe,
	0x32, 0x1e, 0x9a, 0x25, 0xda, 0x84, 0x3a, 0x42, 0x67, 0x3c, 0x35, 0x09, 0x3d, 0x05, 0x03, 0xd1,
	0x64, 0xea, 0x3a, 0xe3, 0x6b, 0xb3, 0x7c, 0x0c, 0x8f, 0xfa, 0x37, 0x66, 0x85, 0x9e, 0x00, 0x20,
	0x1a, 0x7c, 0x9f, 0x0e, 0x27, 0xa6, 0x76, 0xc4, 0x23, 0xe7, 0xdb, 0xf0, 0xca, 0xd4, 0x7b, 0x1f,
	0xf6, 0x8f, 0x68, 0x22, 0x9f, 0x56, 0xe0, 0x73, 0xfa, 0x0e, 0x74, 0xc4, 0xb4, 0x65, 0x17, 0x1f,
	0x57, 0xdb, 0xb0, 0xf3, 0xc5, 0xb6, 0x4a, 0x5d, 0xd2, 0xbb, 0x05, 0x43, 0xf9, 0x73, 0xd0, 0x9d,
	0x43, 0x35, 0x5b, 0x15, 0x4a, 0xed, 0x07, 0x5b, 0xd6, 0x7e, 0x6a, 0x3f, 0xdc, 0x23, 0xab, 0x44,
	0xdf, 0x82, 0x76, 0x23, 0x7f, 0x3c, 0x85, 0xdc, 0xea, 0x76, 0xe1, 0x6c, 0x95, 0xce, 0x48, 0x97,
	0x0c, 0x1a, 0x3f, 0x6a, 0xf6, 0x05, 0xbe, 0xf9, 0x79, 0x15, 0x3f, 0xe7, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x96, 0x25, 0x05, 0x41, 0x16, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MatchServiceClient is the client API for MatchService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MatchServiceClient interface {
	Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (MatchService_MatchClient, error)
}

type matchServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMatchServiceClient(cc grpc.ClientConnInterface) MatchServiceClient {
	return &matchServiceClient{cc}
}

func (c *matchServiceClient) Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (MatchService_MatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MatchService_serviceDesc.Streams[0], "/MatchService/Match", opts...)
	if err != nil {
		return nil, err
	}
	x := &matchServiceMatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MatchService_MatchClient interface {
	Recv() (*MatchEvent, error)
	grpc.ClientStream
}

type matchServiceMatchClient struct {
	grpc.ClientStream
}

func (x *matchServiceMatchClient) Recv() (*MatchEvent, error) {
	m := new(MatchEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MatchServiceServer is the server API for MatchService service.
type MatchServiceServer interface {
	Match(*MatchRequest, MatchService_MatchServer) error
}

// UnimplementedMatchServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMatchServiceServer struct {
}

func (*UnimplementedMatchServiceServer) Match(req *MatchRequest, srv MatchService_MatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Match not implemented")
}

func RegisterMatchServiceServer(s *grpc.Server, srv MatchServiceServer) {
	s.RegisterService(&_MatchService_serviceDesc, srv)
}

func _MatchService_Match_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MatchServiceServer).Match(m, &matchServiceMatchServer{stream})
}

type MatchService_MatchServer interface {
	Send(*MatchEvent) error
	grpc.ServerStream
}

type matchServiceMatchServer struct {
	grpc.ServerStream
}

func (x *matchServiceMatchServer) Send(m *MatchEvent) error {
	return x.ServerStream.SendMsg(m)
}

var _MatchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "MatchService",
	HandlerType: (*MatchServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Match",
			Handler:       _MatchService_Match_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc-gaming-server.proto",
}

// GameServiceClient is the client API for GameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameServiceClient interface {
	Create(ctx context.Context, in *CreateGameRequest, opts ...grpc.CallOption) (*CreateGameResponse, error)
	Play(ctx context.Context, opts ...grpc.CallOption) (GameService_PlayClient, error)
}

type gameServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGameServiceClient(cc grpc.ClientConnInterface) GameServiceClient {
	return &gameServiceClient{cc}
}

func (c *gameServiceClient) Create(ctx context.Context, in *CreateGameRequest, opts ...grpc.CallOption) (*CreateGameResponse, error) {
	out := new(CreateGameResponse)
	err := c.cc.Invoke(ctx, "/GameService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gameServiceClient) Play(ctx context.Context, opts ...grpc.CallOption) (GameService_PlayClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameService_serviceDesc.Streams[0], "/GameService/Play", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameServicePlayClient{stream}
	return x, nil
}

type GameService_PlayClient interface {
	Send(*GameEvent) error
	Recv() (*GameEvent, error)
	grpc.ClientStream
}

type gameServicePlayClient struct {
	grpc.ClientStream
}

func (x *gameServicePlayClient) Send(m *GameEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameServicePlayClient) Recv() (*GameEvent, error) {
	m := new(GameEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GameServiceServer is the server API for GameService service.
type GameServiceServer interface {
	Create(context.Context, *CreateGameRequest) (*CreateGameResponse, error)
	Play(GameService_PlayServer) error
}

// UnimplementedGameServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGameServiceServer struct {
}

func (*UnimplementedGameServiceServer) Create(ctx context.Context, req *CreateGameRequest) (*CreateGameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedGameServiceServer) Play(srv GameService_PlayServer) error {
	return status.Errorf(codes.Unimplemented, "method Play not implemented")
}

func RegisterGameServiceServer(s *grpc.Server, srv GameServiceServer) {
	s.RegisterService(&_GameService_serviceDesc, srv)
}

func _GameService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServiceServer).Create(ctx, req.(*CreateGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GameService_Play_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServiceServer).Play(&gameServicePlayServer{stream})
}

type GameService_PlayServer interface {
	Send(*GameEvent) error
	Recv() (*GameEvent, error)
	grpc.ServerStream
}

type gameServicePlayServer struct {
	grpc.ServerStream
}

func (x *gameServicePlayServer) Send(m *GameEvent) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameServicePlayServer) Recv() (*GameEvent, error) {
	m := new(GameEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GameService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GameService",
	HandlerType: (*GameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _GameService_Create_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Play",
			Handler:       _GameService_Play_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "grpc-gaming-server.proto",
}
